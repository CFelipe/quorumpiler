Terminals which are not used

   BAD_COMMENT
   ERROR
   END_OF_FILE


Grammar

    0 $accept: stmts $end

    1 stmt: repeat_stmt
    2     | if_stmt
    3     | class_decl
    4     | use_stmt
    5     | check_stmt
    6     | detect_stmt
    7     | always_stmt
    8     | declaration
    9     | action_decl
   10     | id_stmt
   11     | output_stmt
   12     | return_stmt

   13 stmts: stmt stmts
   14      | /* empty */

   15 type: INTEGER_TYPE
   16     | NUMBER_TYPE
   17     | BOOLEAN_TYPE
   18     | TEXT_TYPE

   19 cast_expr: CAST LPAREN type COMMA ID RPAREN

   20 expr: expr PLUS_OP expr
   21     | expr MINUS_OP expr
   22     | expr TIMES_OP expr
   23     | expr DIV_OP expr
   24     | expr OR expr
   25     | expr AND expr
   26     | expr EQ expr
   27     | expr NOTEQ expr
   28     | expr GR expr
   29     | expr LE expr
   30     | expr GREQ expr
   31     | expr LEEQ expr
   32     | cast_expr
   33     | ID action_call
   34     | FALSE
   35     | TRUE
   36     | NUMBER
   37     | INTEGER
   38     | ID
   39     | TEXT
   40     | MINUS_OP expr
   41     | LPAREN expr RPAREN

   42 lib: ID libp

   43 libp: DOT ID libp
   44     | /* empty */

   45 args: expr argsp
   46     | /* empty */

   47 argsp: COMMA expr argsp
   48      | /* empty */

   49 args_def: type ID args_defp

   50 args_defp: COMMA type ID args_defp
   51          | /* empty */

   52 declaration: type ID EQ expr

   53 action_decl: ACTION ID action_args action_ret stmts END

   54 action_args: LPAREN args_def RPAREN
   55            | /* empty */

   56 action_ret: RETURNS type
   57           | /* empty */

   58 instance: COLON ID instance
   59         | /* empty */

   60 action_call: LPAREN args RPAREN

   61 class_decl: CLASS ID inheritance action_decl END

   62 inheritance: IS args
   63            | /* empty */

   64 assign: EQ expr

   65 id_stmt: ID id_stmtp

   66 id_stmtp: instance action_call
   67         | assign

   68 repeat_stmt: REPEAT repeat_stmtp stmts END

   69 repeat_stmtp: WHILE expr
   70             | UNTIL expr
   71             | INTEGER TIMES

   72 if_stmt: IF expr stmts elseif_stmt

   73 elseif_stmt: ELSEIF expr stmts elseif_stmt
   74            | else_stmt

   75 else_stmt: ELSE stmts END
   76          | END

   77 use_stmt: USE lib

   78 check_stmt: CHECK stmts END

   79 detect_stmt: DETECT ID IS ID stmts END

   80 always_stmt: ALWAYS stmts END

   81 output_stmt: OUTPUT ID
   82            | OUTPUT TEXT

   83 return_stmt: RETURN expr


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_TYPE (258) 15
NUMBER_TYPE (259) 16
BOOLEAN_TYPE (260) 17
TEXT_TYPE (261) 18
CAST (262) 19
LPAREN (263) 19 41 54 60
COMMA (264) 19 47 50
ID (265) 19 33 38 42 43 49 50 52 53 58 61 65 79 81
RPAREN (266) 19 41 54 60
OR (267) 24
AND (268) 25
NOTEQ (269) 27
EQ (270) 26 52 64
GR (271) 28
LE (272) 29
GREQ (273) 30
LEEQ (274) 31
PLUS_OP (275) 20
MINUS_OP (276) 21 40
TIMES_OP (277) 22
DIV_OP (278) 23
FALSE (279) 34
TRUE (280) 35
NUMBER (281) 36
TEXT (282) 39 82
INTEGER (283) 37 71
DOT (284) 43
ACTION (285) 53
END (286) 53 61 68 75 76 78 79 80
RETURNS (287) 56
COLON (288) 58
CLASS (289) 61
IS (290) 62 79
REPEAT (291) 68
WHILE (292) 69
UNTIL (293) 70
IF (294) 72
ELSEIF (295) 73
ELSE (296) 75
USE (297) 77
CHECK (298) 78
DETECT (299) 79
ALWAYS (300) 80
TIMES (301) 71
OUTPUT (302) 81 82
RETURN (303) 83
BAD_COMMENT (304)
ERROR (305)
END_OF_FILE (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
stmt (53)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12, on right: 13
stmts (54)
    on left: 13 14, on right: 0 13 53 68 72 73 75 78 79 80
type (55)
    on left: 15 16 17 18, on right: 19 49 50 52 56
cast_expr (56)
    on left: 19, on right: 32
expr (57)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
    38 39 40 41, on right: 20 21 22 23 24 25 26 27 28 29 30 31 40 41
    45 47 52 64 69 70 72 73 83
lib (58)
    on left: 42, on right: 77
libp (59)
    on left: 43 44, on right: 42 43
args (60)
    on left: 45 46, on right: 60 62
argsp (61)
    on left: 47 48, on right: 45 47
args_def (62)
    on left: 49, on right: 54
args_defp (63)
    on left: 50 51, on right: 49 50
declaration (64)
    on left: 52, on right: 8
action_decl (65)
    on left: 53, on right: 9 61
action_args (66)
    on left: 54 55, on right: 53
action_ret (67)
    on left: 56 57, on right: 53
instance (68)
    on left: 58 59, on right: 58 66
action_call (69)
    on left: 60, on right: 33 66
class_decl (70)
    on left: 61, on right: 3
inheritance (71)
    on left: 62 63, on right: 61
assign (72)
    on left: 64, on right: 67
id_stmt (73)
    on left: 65, on right: 10
id_stmtp (74)
    on left: 66 67, on right: 65
repeat_stmt (75)
    on left: 68, on right: 1
repeat_stmtp (76)
    on left: 69 70 71, on right: 68
if_stmt (77)
    on left: 72, on right: 2
elseif_stmt (78)
    on left: 73 74, on right: 72 73
else_stmt (79)
    on left: 75 76, on right: 74
use_stmt (80)
    on left: 77, on right: 4
check_stmt (81)
    on left: 78, on right: 5
detect_stmt (82)
    on left: 79, on right: 6
always_stmt (83)
    on left: 80, on right: 7
output_stmt (84)
    on left: 81 82, on right: 11
return_stmt (85)
    on left: 83, on right: 12


state 0

    0 $accept: . stmts $end

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13
    OUTPUT        shift, and go to state 14
    RETURN        shift, and go to state 15

    $default  reduce using rule 14 (stmts)

    stmt         go to state 16
    stmts        go to state 17
    type         go to state 18
    declaration  go to state 19
    action_decl  go to state 20
    class_decl   go to state 21
    id_stmt      go to state 22
    repeat_stmt  go to state 23
    if_stmt      go to state 24
    use_stmt     go to state 25
    check_stmt   go to state 26
    detect_stmt  go to state 27
    always_stmt  go to state 28
    output_stmt  go to state 29
    return_stmt  go to state 30


state 1

   15 type: INTEGER_TYPE .

    $default  reduce using rule 15 (type)


state 2

   16 type: NUMBER_TYPE .

    $default  reduce using rule 16 (type)


state 3

   17 type: BOOLEAN_TYPE .

    $default  reduce using rule 17 (type)


state 4

   18 type: TEXT_TYPE .

    $default  reduce using rule 18 (type)


state 5

   65 id_stmt: ID . id_stmtp

    EQ     shift, and go to state 31
    COLON  shift, and go to state 32

    $default  reduce using rule 59 (instance)

    instance  go to state 33
    assign    go to state 34
    id_stmtp  go to state 35


state 6

   53 action_decl: ACTION . ID action_args action_ret stmts END

    ID  shift, and go to state 36


state 7

   61 class_decl: CLASS . ID inheritance action_decl END

    ID  shift, and go to state 37


state 8

   68 repeat_stmt: REPEAT . repeat_stmtp stmts END

    INTEGER  shift, and go to state 38
    WHILE    shift, and go to state 39
    UNTIL    shift, and go to state 40

    repeat_stmtp  go to state 41


state 9

   72 if_stmt: IF . expr stmts elseif_stmt

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 52


state 10

   77 use_stmt: USE . lib

    ID  shift, and go to state 53

    lib  go to state 54


state 11

   78 check_stmt: CHECK . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13
    OUTPUT        shift, and go to state 14
    RETURN        shift, and go to state 15

    $default  reduce using rule 14 (stmts)

    stmt         go to state 16
    stmts        go to state 55
    type         go to state 18
    declaration  go to state 19
    action_decl  go to state 20
    class_decl   go to state 21
    id_stmt      go to state 22
    repeat_stmt  go to state 23
    if_stmt      go to state 24
    use_stmt     go to state 25
    check_stmt   go to state 26
    detect_stmt  go to state 27
    always_stmt  go to state 28
    output_stmt  go to state 29
    return_stmt  go to state 30


state 12

   79 detect_stmt: DETECT . ID IS ID stmts END

    ID  shift, and go to state 56


state 13

   80 always_stmt: ALWAYS . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13
    OUTPUT        shift, and go to state 14
    RETURN        shift, and go to state 15

    $default  reduce using rule 14 (stmts)

    stmt         go to state 16
    stmts        go to state 57
    type         go to state 18
    declaration  go to state 19
    action_decl  go to state 20
    class_decl   go to state 21
    id_stmt      go to state 22
    repeat_stmt  go to state 23
    if_stmt      go to state 24
    use_stmt     go to state 25
    check_stmt   go to state 26
    detect_stmt  go to state 27
    always_stmt  go to state 28
    output_stmt  go to state 29
    return_stmt  go to state 30


state 14

   81 output_stmt: OUTPUT . ID
   82            | OUTPUT . TEXT

    ID    shift, and go to state 58
    TEXT  shift, and go to state 59


state 15

   83 return_stmt: RETURN . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 60


state 16

   13 stmts: stmt . stmts

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13
    OUTPUT        shift, and go to state 14
    RETURN        shift, and go to state 15

    $default  reduce using rule 14 (stmts)

    stmt         go to state 16
    stmts        go to state 61
    type         go to state 18
    declaration  go to state 19
    action_decl  go to state 20
    class_decl   go to state 21
    id_stmt      go to state 22
    repeat_stmt  go to state 23
    if_stmt      go to state 24
    use_stmt     go to state 25
    check_stmt   go to state 26
    detect_stmt  go to state 27
    always_stmt  go to state 28
    output_stmt  go to state 29
    return_stmt  go to state 30


state 17

    0 $accept: stmts . $end

    $end  shift, and go to state 62


state 18

   52 declaration: type . ID EQ expr

    ID  shift, and go to state 63


state 19

    8 stmt: declaration .

    $default  reduce using rule 8 (stmt)


state 20

    9 stmt: action_decl .

    $default  reduce using rule 9 (stmt)


state 21

    3 stmt: class_decl .

    $default  reduce using rule 3 (stmt)


state 22

   10 stmt: id_stmt .

    $default  reduce using rule 10 (stmt)


state 23

    1 stmt: repeat_stmt .

    $default  reduce using rule 1 (stmt)


state 24

    2 stmt: if_stmt .

    $default  reduce using rule 2 (stmt)


state 25

    4 stmt: use_stmt .

    $default  reduce using rule 4 (stmt)


state 26

    5 stmt: check_stmt .

    $default  reduce using rule 5 (stmt)


state 27

    6 stmt: detect_stmt .

    $default  reduce using rule 6 (stmt)


state 28

    7 stmt: always_stmt .

    $default  reduce using rule 7 (stmt)


state 29

   11 stmt: output_stmt .

    $default  reduce using rule 11 (stmt)


state 30

   12 stmt: return_stmt .

    $default  reduce using rule 12 (stmt)


state 31

   64 assign: EQ . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 64


state 32

   58 instance: COLON . ID instance

    ID  shift, and go to state 65


state 33

   66 id_stmtp: instance . action_call

    LPAREN  shift, and go to state 66

    action_call  go to state 67


state 34

   67 id_stmtp: assign .

    $default  reduce using rule 67 (id_stmtp)


state 35

   65 id_stmt: ID id_stmtp .

    $default  reduce using rule 65 (id_stmt)


state 36

   53 action_decl: ACTION ID . action_args action_ret stmts END

    LPAREN  shift, and go to state 68

    $default  reduce using rule 55 (action_args)

    action_args  go to state 69


state 37

   61 class_decl: CLASS ID . inheritance action_decl END

    IS  shift, and go to state 70

    $default  reduce using rule 63 (inheritance)

    inheritance  go to state 71


state 38

   71 repeat_stmtp: INTEGER . TIMES

    TIMES  shift, and go to state 72


state 39

   69 repeat_stmtp: WHILE . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 73


state 40

   70 repeat_stmtp: UNTIL . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 74


state 41

   68 repeat_stmt: REPEAT repeat_stmtp . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13
    OUTPUT        shift, and go to state 14
    RETURN        shift, and go to state 15

    $default  reduce using rule 14 (stmts)

    stmt         go to state 16
    stmts        go to state 75
    type         go to state 18
    declaration  go to state 19
    action_decl  go to state 20
    class_decl   go to state 21
    id_stmt      go to state 22
    repeat_stmt  go to state 23
    if_stmt      go to state 24
    use_stmt     go to state 25
    check_stmt   go to state 26
    detect_stmt  go to state 27
    always_stmt  go to state 28
    output_stmt  go to state 29
    return_stmt  go to state 30


state 42

   19 cast_expr: CAST . LPAREN type COMMA ID RPAREN

    LPAREN  shift, and go to state 76


state 43

   41 expr: LPAREN . expr RPAREN

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 77


state 44

   33 expr: ID . action_call
   38     | ID .

    LPAREN  shift, and go to state 66

    $default  reduce using rule 38 (expr)

    action_call  go to state 78


state 45

   40 expr: MINUS_OP . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 79


state 46

   34 expr: FALSE .

    $default  reduce using rule 34 (expr)


state 47

   35 expr: TRUE .

    $default  reduce using rule 35 (expr)


state 48

   36 expr: NUMBER .

    $default  reduce using rule 36 (expr)


state 49

   39 expr: TEXT .

    $default  reduce using rule 39 (expr)


state 50

   37 expr: INTEGER .

    $default  reduce using rule 37 (expr)


state 51

   32 expr: cast_expr .

    $default  reduce using rule 32 (expr)


state 52

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   72 if_stmt: IF expr . stmts elseif_stmt

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    OR            shift, and go to state 80
    AND           shift, and go to state 81
    NOTEQ         shift, and go to state 82
    EQ            shift, and go to state 83
    GR            shift, and go to state 84
    LE            shift, and go to state 85
    GREQ          shift, and go to state 86
    LEEQ          shift, and go to state 87
    PLUS_OP       shift, and go to state 88
    MINUS_OP      shift, and go to state 89
    TIMES_OP      shift, and go to state 90
    DIV_OP        shift, and go to state 91
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13
    OUTPUT        shift, and go to state 14
    RETURN        shift, and go to state 15

    $default  reduce using rule 14 (stmts)

    stmt         go to state 16
    stmts        go to state 92
    type         go to state 18
    declaration  go to state 19
    action_decl  go to state 20
    class_decl   go to state 21
    id_stmt      go to state 22
    repeat_stmt  go to state 23
    if_stmt      go to state 24
    use_stmt     go to state 25
    check_stmt   go to state 26
    detect_stmt  go to state 27
    always_stmt  go to state 28
    output_stmt  go to state 29
    return_stmt  go to state 30


state 53

   42 lib: ID . libp

    DOT  shift, and go to state 93

    $default  reduce using rule 44 (libp)

    libp  go to state 94


state 54

   77 use_stmt: USE lib .

    $default  reduce using rule 77 (use_stmt)


state 55

   78 check_stmt: CHECK stmts . END

    END  shift, and go to state 95


state 56

   79 detect_stmt: DETECT ID . IS ID stmts END

    IS  shift, and go to state 96


state 57

   80 always_stmt: ALWAYS stmts . END

    END  shift, and go to state 97


state 58

   81 output_stmt: OUTPUT ID .

    $default  reduce using rule 81 (output_stmt)


state 59

   82 output_stmt: OUTPUT TEXT .

    $default  reduce using rule 82 (output_stmt)


state 60

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   83 return_stmt: RETURN expr .

    OR        shift, and go to state 80
    AND       shift, and go to state 81
    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 83 (return_stmt)


state 61

   13 stmts: stmt stmts .

    $default  reduce using rule 13 (stmts)


state 62

    0 $accept: stmts $end .

    $default  accept


state 63

   52 declaration: type ID . EQ expr

    EQ  shift, and go to state 98


state 64

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   64 assign: EQ expr .

    OR        shift, and go to state 80
    AND       shift, and go to state 81
    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 64 (assign)


state 65

   58 instance: COLON ID . instance

    COLON  shift, and go to state 32

    $default  reduce using rule 59 (instance)

    instance  go to state 99


state 66

   60 action_call: LPAREN . args RPAREN

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    $default  reduce using rule 46 (args)

    cast_expr  go to state 51
    expr       go to state 100
    args       go to state 101


state 67

   66 id_stmtp: instance action_call .

    $default  reduce using rule 66 (id_stmtp)


state 68

   54 action_args: LPAREN . args_def RPAREN

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4

    type      go to state 102
    args_def  go to state 103


state 69

   53 action_decl: ACTION ID action_args . action_ret stmts END

    RETURNS  shift, and go to state 104

    $default  reduce using rule 57 (action_ret)

    action_ret  go to state 105


state 70

   62 inheritance: IS . args

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    $default  reduce using rule 46 (args)

    cast_expr  go to state 51
    expr       go to state 100
    args       go to state 106


state 71

   61 class_decl: CLASS ID inheritance . action_decl END

    ACTION  shift, and go to state 6

    action_decl  go to state 107


state 72

   71 repeat_stmtp: INTEGER TIMES .

    $default  reduce using rule 71 (repeat_stmtp)


state 73

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   69 repeat_stmtp: WHILE expr .

    OR        shift, and go to state 80
    AND       shift, and go to state 81
    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 69 (repeat_stmtp)


state 74

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   70 repeat_stmtp: UNTIL expr .

    OR        shift, and go to state 80
    AND       shift, and go to state 81
    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 70 (repeat_stmtp)


state 75

   68 repeat_stmt: REPEAT repeat_stmtp stmts . END

    END  shift, and go to state 108


state 76

   19 cast_expr: CAST LPAREN . type COMMA ID RPAREN

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4

    type  go to state 109


state 77

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   41     | LPAREN expr . RPAREN

    RPAREN    shift, and go to state 110
    OR        shift, and go to state 80
    AND       shift, and go to state 81
    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91


state 78

   33 expr: ID action_call .

    $default  reduce using rule 33 (expr)


state 79

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   40     | MINUS_OP expr .

    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 40 (expr)


state 80

   24 expr: expr OR . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 111


state 81

   25 expr: expr AND . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 112


state 82

   27 expr: expr NOTEQ . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 113


state 83

   26 expr: expr EQ . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 114


state 84

   28 expr: expr GR . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 115


state 85

   29 expr: expr LE . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 116


state 86

   30 expr: expr GREQ . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 117


state 87

   31 expr: expr LEEQ . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 118


state 88

   20 expr: expr PLUS_OP . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 119


state 89

   21 expr: expr MINUS_OP . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 120


state 90

   22 expr: expr TIMES_OP . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 121


state 91

   23 expr: expr DIV_OP . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 122


state 92

   72 if_stmt: IF expr stmts . elseif_stmt

    END     shift, and go to state 123
    ELSEIF  shift, and go to state 124
    ELSE    shift, and go to state 125

    elseif_stmt  go to state 126
    else_stmt    go to state 127


state 93

   43 libp: DOT . ID libp

    ID  shift, and go to state 128


state 94

   42 lib: ID libp .

    $default  reduce using rule 42 (lib)


state 95

   78 check_stmt: CHECK stmts END .

    $default  reduce using rule 78 (check_stmt)


state 96

   79 detect_stmt: DETECT ID IS . ID stmts END

    ID  shift, and go to state 129


state 97

   80 always_stmt: ALWAYS stmts END .

    $default  reduce using rule 80 (always_stmt)


state 98

   52 declaration: type ID EQ . expr

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 130


state 99

   58 instance: COLON ID instance .

    $default  reduce using rule 58 (instance)


state 100

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   45 args: expr . argsp

    COMMA     shift, and go to state 131
    OR        shift, and go to state 80
    AND       shift, and go to state 81
    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 48 (argsp)

    argsp  go to state 132


state 101

   60 action_call: LPAREN args . RPAREN

    RPAREN  shift, and go to state 133


state 102

   49 args_def: type . ID args_defp

    ID  shift, and go to state 134


state 103

   54 action_args: LPAREN args_def . RPAREN

    RPAREN  shift, and go to state 135


state 104

   56 action_ret: RETURNS . type

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4

    type  go to state 136


state 105

   53 action_decl: ACTION ID action_args action_ret . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13
    OUTPUT        shift, and go to state 14
    RETURN        shift, and go to state 15

    $default  reduce using rule 14 (stmts)

    stmt         go to state 16
    stmts        go to state 137
    type         go to state 18
    declaration  go to state 19
    action_decl  go to state 20
    class_decl   go to state 21
    id_stmt      go to state 22
    repeat_stmt  go to state 23
    if_stmt      go to state 24
    use_stmt     go to state 25
    check_stmt   go to state 26
    detect_stmt  go to state 27
    always_stmt  go to state 28
    output_stmt  go to state 29
    return_stmt  go to state 30


state 106

   62 inheritance: IS args .

    $default  reduce using rule 62 (inheritance)


state 107

   61 class_decl: CLASS ID inheritance action_decl . END

    END  shift, and go to state 138


state 108

   68 repeat_stmt: REPEAT repeat_stmtp stmts END .

    $default  reduce using rule 68 (repeat_stmt)


state 109

   19 cast_expr: CAST LPAREN type . COMMA ID RPAREN

    COMMA  shift, and go to state 139


state 110

   41 expr: LPAREN expr RPAREN .

    $default  reduce using rule 41 (expr)


state 111

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   24     | expr OR expr .
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr

    AND       shift, and go to state 81
    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 24 (expr)


state 112

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   25     | expr AND expr .
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr

    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 25 (expr)


state 113

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   27     | expr NOTEQ expr .
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr

    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 27 (expr)


state 114

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   26     | expr EQ expr .
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr

    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 26 (expr)


state 115

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   28     | expr GR expr .
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr

    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    GR    error (nonassociative)
    LE    error (nonassociative)
    GREQ  error (nonassociative)
    LEEQ  error (nonassociative)

    $default  reduce using rule 28 (expr)


state 116

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   29     | expr LE expr .
   30     | expr . GREQ expr
   31     | expr . LEEQ expr

    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    GR    error (nonassociative)
    LE    error (nonassociative)
    GREQ  error (nonassociative)
    LEEQ  error (nonassociative)

    $default  reduce using rule 29 (expr)


state 117

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   30     | expr GREQ expr .
   31     | expr . LEEQ expr

    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    GR    error (nonassociative)
    LE    error (nonassociative)
    GREQ  error (nonassociative)
    LEEQ  error (nonassociative)

    $default  reduce using rule 30 (expr)


state 118

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   31     | expr LEEQ expr .

    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    GR    error (nonassociative)
    LE    error (nonassociative)
    GREQ  error (nonassociative)
    LEEQ  error (nonassociative)

    $default  reduce using rule 31 (expr)


state 119

   20 expr: expr . PLUS_OP expr
   20     | expr PLUS_OP expr .
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr

    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 20 (expr)


state 120

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   21     | expr MINUS_OP expr .
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr

    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 21 (expr)


state 121

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   22     | expr TIMES_OP expr .
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr

    $default  reduce using rule 22 (expr)


state 122

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   23     | expr DIV_OP expr .
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr

    $default  reduce using rule 23 (expr)


state 123

   76 else_stmt: END .

    $default  reduce using rule 76 (else_stmt)


state 124

   73 elseif_stmt: ELSEIF . expr stmts elseif_stmt

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 140


state 125

   75 else_stmt: ELSE . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13
    OUTPUT        shift, and go to state 14
    RETURN        shift, and go to state 15

    $default  reduce using rule 14 (stmts)

    stmt         go to state 16
    stmts        go to state 141
    type         go to state 18
    declaration  go to state 19
    action_decl  go to state 20
    class_decl   go to state 21
    id_stmt      go to state 22
    repeat_stmt  go to state 23
    if_stmt      go to state 24
    use_stmt     go to state 25
    check_stmt   go to state 26
    detect_stmt  go to state 27
    always_stmt  go to state 28
    output_stmt  go to state 29
    return_stmt  go to state 30


state 126

   72 if_stmt: IF expr stmts elseif_stmt .

    $default  reduce using rule 72 (if_stmt)


state 127

   74 elseif_stmt: else_stmt .

    $default  reduce using rule 74 (elseif_stmt)


state 128

   43 libp: DOT ID . libp

    DOT  shift, and go to state 93

    $default  reduce using rule 44 (libp)

    libp  go to state 142


state 129

   79 detect_stmt: DETECT ID IS ID . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13
    OUTPUT        shift, and go to state 14
    RETURN        shift, and go to state 15

    $default  reduce using rule 14 (stmts)

    stmt         go to state 16
    stmts        go to state 143
    type         go to state 18
    declaration  go to state 19
    action_decl  go to state 20
    class_decl   go to state 21
    id_stmt      go to state 22
    repeat_stmt  go to state 23
    if_stmt      go to state 24
    use_stmt     go to state 25
    check_stmt   go to state 26
    detect_stmt  go to state 27
    always_stmt  go to state 28
    output_stmt  go to state 29
    return_stmt  go to state 30


state 130

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   52 declaration: type ID EQ expr .

    OR        shift, and go to state 80
    AND       shift, and go to state 81
    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 52 (declaration)


state 131

   47 argsp: COMMA . expr argsp

    CAST      shift, and go to state 42
    LPAREN    shift, and go to state 43
    ID        shift, and go to state 44
    MINUS_OP  shift, and go to state 45
    FALSE     shift, and go to state 46
    TRUE      shift, and go to state 47
    NUMBER    shift, and go to state 48
    TEXT      shift, and go to state 49
    INTEGER   shift, and go to state 50

    cast_expr  go to state 51
    expr       go to state 144


state 132

   45 args: expr argsp .

    $default  reduce using rule 45 (args)


state 133

   60 action_call: LPAREN args RPAREN .

    $default  reduce using rule 60 (action_call)


state 134

   49 args_def: type ID . args_defp

    COMMA  shift, and go to state 145

    $default  reduce using rule 51 (args_defp)

    args_defp  go to state 146


state 135

   54 action_args: LPAREN args_def RPAREN .

    $default  reduce using rule 54 (action_args)


state 136

   56 action_ret: RETURNS type .

    $default  reduce using rule 56 (action_ret)


state 137

   53 action_decl: ACTION ID action_args action_ret stmts . END

    END  shift, and go to state 147


state 138

   61 class_decl: CLASS ID inheritance action_decl END .

    $default  reduce using rule 61 (class_decl)


state 139

   19 cast_expr: CAST LPAREN type COMMA . ID RPAREN

    ID  shift, and go to state 148


state 140

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   73 elseif_stmt: ELSEIF expr . stmts elseif_stmt

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    OR            shift, and go to state 80
    AND           shift, and go to state 81
    NOTEQ         shift, and go to state 82
    EQ            shift, and go to state 83
    GR            shift, and go to state 84
    LE            shift, and go to state 85
    GREQ          shift, and go to state 86
    LEEQ          shift, and go to state 87
    PLUS_OP       shift, and go to state 88
    MINUS_OP      shift, and go to state 89
    TIMES_OP      shift, and go to state 90
    DIV_OP        shift, and go to state 91
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13
    OUTPUT        shift, and go to state 14
    RETURN        shift, and go to state 15

    $default  reduce using rule 14 (stmts)

    stmt         go to state 16
    stmts        go to state 149
    type         go to state 18
    declaration  go to state 19
    action_decl  go to state 20
    class_decl   go to state 21
    id_stmt      go to state 22
    repeat_stmt  go to state 23
    if_stmt      go to state 24
    use_stmt     go to state 25
    check_stmt   go to state 26
    detect_stmt  go to state 27
    always_stmt  go to state 28
    output_stmt  go to state 29
    return_stmt  go to state 30


state 141

   75 else_stmt: ELSE stmts . END

    END  shift, and go to state 150


state 142

   43 libp: DOT ID libp .

    $default  reduce using rule 43 (libp)


state 143

   79 detect_stmt: DETECT ID IS ID stmts . END

    END  shift, and go to state 151


state 144

   20 expr: expr . PLUS_OP expr
   21     | expr . MINUS_OP expr
   22     | expr . TIMES_OP expr
   23     | expr . DIV_OP expr
   24     | expr . OR expr
   25     | expr . AND expr
   26     | expr . EQ expr
   27     | expr . NOTEQ expr
   28     | expr . GR expr
   29     | expr . LE expr
   30     | expr . GREQ expr
   31     | expr . LEEQ expr
   47 argsp: COMMA expr . argsp

    COMMA     shift, and go to state 131
    OR        shift, and go to state 80
    AND       shift, and go to state 81
    NOTEQ     shift, and go to state 82
    EQ        shift, and go to state 83
    GR        shift, and go to state 84
    LE        shift, and go to state 85
    GREQ      shift, and go to state 86
    LEEQ      shift, and go to state 87
    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89
    TIMES_OP  shift, and go to state 90
    DIV_OP    shift, and go to state 91

    $default  reduce using rule 48 (argsp)

    argsp  go to state 152


state 145

   50 args_defp: COMMA . type ID args_defp

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4

    type  go to state 153


state 146

   49 args_def: type ID args_defp .

    $default  reduce using rule 49 (args_def)


state 147

   53 action_decl: ACTION ID action_args action_ret stmts END .

    $default  reduce using rule 53 (action_decl)


state 148

   19 cast_expr: CAST LPAREN type COMMA ID . RPAREN

    RPAREN  shift, and go to state 154


state 149

   73 elseif_stmt: ELSEIF expr stmts . elseif_stmt

    END     shift, and go to state 123
    ELSEIF  shift, and go to state 124
    ELSE    shift, and go to state 125

    elseif_stmt  go to state 155
    else_stmt    go to state 127


state 150

   75 else_stmt: ELSE stmts END .

    $default  reduce using rule 75 (else_stmt)


state 151

   79 detect_stmt: DETECT ID IS ID stmts END .

    $default  reduce using rule 79 (detect_stmt)


state 152

   47 argsp: COMMA expr argsp .

    $default  reduce using rule 47 (argsp)


state 153

   50 args_defp: COMMA type . ID args_defp

    ID  shift, and go to state 156


state 154

   19 cast_expr: CAST LPAREN type COMMA ID RPAREN .

    $default  reduce using rule 19 (cast_expr)


state 155

   73 elseif_stmt: ELSEIF expr stmts elseif_stmt .

    $default  reduce using rule 73 (elseif_stmt)


state 156

   50 args_defp: COMMA type ID . args_defp

    COMMA  shift, and go to state 145

    $default  reduce using rule 51 (args_defp)

    args_defp  go to state 157


state 157

   50 args_defp: COMMA type ID args_defp .

    $default  reduce using rule 50 (args_defp)
