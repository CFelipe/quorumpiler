Terminals which are not used

   BAD_COMMENT
   ERROR
   END_OF_FILE


Grammar

    0 $accept: stmt $end

    1 stmt: repeat_stmt
    2     | if_stmt
    3     | class_decl
    4     | use_stmt
    5     | check_stmt
    6     | detect_stmt
    7     | always_stmt
    8     | declaration
    9     | action_decl
   10     | id_stmt

   11 stmts: stmt stmts
   12      | /* empty */

   13 type: INTEGER_TYPE
   14     | NUMBER_TYPE
   15     | BOOLEAN_TYPE
   16     | TEXT_TYPE

   17 cast_expr: CAST LPAREN type COMMA ID RPAREN

   18 expr: expr PLUS_OP expr
   19     | expr MINUS_OP expr
   20     | expr TIMES_OP expr
   21     | expr DIV_OP expr
   22     | expr OR expr
   23     | expr AND expr
   24     | expr EQ expr
   25     | expr NOTEQ expr
   26     | expr GR expr
   27     | expr LE expr
   28     | expr GREQ expr
   29     | expr LEEQ expr
   30     | cast_expr
   31     | FALSE
   32     | TRUE
   33     | NUMBER
   34     | INTEGER
   35     | TEXT
   36     | MINUS_OP expr
   37     | LPAREN expr RPAREN

   38 lib: ID libp

   39 libp: DOT ID libp
   40     | /* empty */

   41 args: ID argsp
   42     | /* empty */

   43 argsp: COMMA ID argsp
   44      | /* empty */

   45 args_def: type ID args_defp

   46 args_defp: COMMA type ID args_defp
   47          | /* empty */

   48 declaration: type ID EQ expr

   49 action_decl: ACTION ID action_args action_ret stmts END

   50 action_args: LPAREN args_def RPAREN
   51            | /* empty */

   52 action_ret: RETURNS type
   53           | /* empty */

   54 instance: COLON ID instance
   55         | /* empty */

   56 action_call: LPAREN args RPAREN

   57 class_decl: CLASS ID inheritance declaration action_decl END

   58 inheritance: IS args
   59            | /* empty */

   60 assign: EQ expr

   61 id_stmt: ID id_stmtp

   62 id_stmtp: instance action_call
   63         | assign

   64 repeat_stmt: REPEAT repeat_stmtp stmts END

   65 repeat_stmtp: WHILE expr
   66             | UNTIL expr
   67             | INTEGER TIMES

   68 if_stmt: IF expr stmts elseif_stmt

   69 elseif_stmt: ELSEIF expr stmts elseif_stmt
   70            | else_stmt

   71 else_stmt: ELSE stmts END
   72          | END

   73 use_stmt: USE lib

   74 check_stmt: CHECK stmts END

   75 detect_stmt: DETECT ID IS ID stmts END

   76 always_stmt: ALWAYS stmts END


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_TYPE (258) 13
NUMBER_TYPE (259) 14
BOOLEAN_TYPE (260) 15
TEXT_TYPE (261) 16
CAST (262) 17
LPAREN (263) 17 37 50 56
COMMA (264) 17 43 46
ID (265) 17 38 39 41 43 45 46 48 49 54 57 61 75
RPAREN (266) 17 37 50 56
OR (267) 22
AND (268) 23
NOTEQ (269) 25
EQ (270) 24 48 60
GR (271) 26
LE (272) 27
GREQ (273) 28
LEEQ (274) 29
PLUS_OP (275) 18
MINUS_OP (276) 19 36
TIMES_OP (277) 20
DIV_OP (278) 21
FALSE (279) 31
TRUE (280) 32
NUMBER (281) 33
TEXT (282) 35
INTEGER (283) 34 67
DOT (284) 39
ACTION (285) 49
END (286) 49 57 64 71 72 74 75 76
RETURNS (287) 52
COLON (288) 54
CLASS (289) 57
IS (290) 58 75
REPEAT (291) 64
WHILE (292) 65
UNTIL (293) 66
IF (294) 68
ELSEIF (295) 69
ELSE (296) 71
USE (297) 73
CHECK (298) 74
DETECT (299) 75
ALWAYS (300) 76
TIMES (301) 67
BAD_COMMENT (302)
ERROR (303)
END_OF_FILE (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
stmt (51)
    on left: 1 2 3 4 5 6 7 8 9 10, on right: 0 11
stmts (52)
    on left: 11 12, on right: 11 49 64 68 69 71 74 75 76
type (53)
    on left: 13 14 15 16, on right: 17 45 46 48 52
cast_expr (54)
    on left: 17, on right: 30
expr (55)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
    36 37, on right: 18 19 20 21 22 23 24 25 26 27 28 29 36 37 48 60
    65 66 68 69
lib (56)
    on left: 38, on right: 73
libp (57)
    on left: 39 40, on right: 38 39
args (58)
    on left: 41 42, on right: 56 58
argsp (59)
    on left: 43 44, on right: 41 43
args_def (60)
    on left: 45, on right: 50
args_defp (61)
    on left: 46 47, on right: 45 46
declaration (62)
    on left: 48, on right: 8 57
action_decl (63)
    on left: 49, on right: 9 57
action_args (64)
    on left: 50 51, on right: 49
action_ret (65)
    on left: 52 53, on right: 49
instance (66)
    on left: 54 55, on right: 54 62
action_call (67)
    on left: 56, on right: 62
class_decl (68)
    on left: 57, on right: 3
inheritance (69)
    on left: 58 59, on right: 57
assign (70)
    on left: 60, on right: 63
id_stmt (71)
    on left: 61, on right: 10
id_stmtp (72)
    on left: 62 63, on right: 61
repeat_stmt (73)
    on left: 64, on right: 1
repeat_stmtp (74)
    on left: 65 66 67, on right: 64
if_stmt (75)
    on left: 68, on right: 2
elseif_stmt (76)
    on left: 69 70, on right: 68 69
else_stmt (77)
    on left: 71 72, on right: 70
use_stmt (78)
    on left: 73, on right: 4
check_stmt (79)
    on left: 74, on right: 5
detect_stmt (80)
    on left: 75, on right: 6
always_stmt (81)
    on left: 76, on right: 7


state 0

    0 $accept: . stmt $end

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13

    stmt         go to state 14
    type         go to state 15
    declaration  go to state 16
    action_decl  go to state 17
    class_decl   go to state 18
    id_stmt      go to state 19
    repeat_stmt  go to state 20
    if_stmt      go to state 21
    use_stmt     go to state 22
    check_stmt   go to state 23
    detect_stmt  go to state 24
    always_stmt  go to state 25


state 1

   13 type: INTEGER_TYPE .

    $default  reduce using rule 13 (type)


state 2

   14 type: NUMBER_TYPE .

    $default  reduce using rule 14 (type)


state 3

   15 type: BOOLEAN_TYPE .

    $default  reduce using rule 15 (type)


state 4

   16 type: TEXT_TYPE .

    $default  reduce using rule 16 (type)


state 5

   61 id_stmt: ID . id_stmtp

    EQ     shift, and go to state 26
    COLON  shift, and go to state 27

    $default  reduce using rule 55 (instance)

    instance  go to state 28
    assign    go to state 29
    id_stmtp  go to state 30


state 6

   49 action_decl: ACTION . ID action_args action_ret stmts END

    ID  shift, and go to state 31


state 7

   57 class_decl: CLASS . ID inheritance declaration action_decl END

    ID  shift, and go to state 32


state 8

   64 repeat_stmt: REPEAT . repeat_stmtp stmts END

    INTEGER  shift, and go to state 33
    WHILE    shift, and go to state 34
    UNTIL    shift, and go to state 35

    repeat_stmtp  go to state 36


state 9

   68 if_stmt: IF . expr stmts elseif_stmt

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 46


state 10

   73 use_stmt: USE . lib

    ID  shift, and go to state 47

    lib  go to state 48


state 11

   74 check_stmt: CHECK . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13

    $default  reduce using rule 12 (stmts)

    stmt         go to state 49
    stmts        go to state 50
    type         go to state 15
    declaration  go to state 16
    action_decl  go to state 17
    class_decl   go to state 18
    id_stmt      go to state 19
    repeat_stmt  go to state 20
    if_stmt      go to state 21
    use_stmt     go to state 22
    check_stmt   go to state 23
    detect_stmt  go to state 24
    always_stmt  go to state 25


state 12

   75 detect_stmt: DETECT . ID IS ID stmts END

    ID  shift, and go to state 51


state 13

   76 always_stmt: ALWAYS . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13

    $default  reduce using rule 12 (stmts)

    stmt         go to state 49
    stmts        go to state 52
    type         go to state 15
    declaration  go to state 16
    action_decl  go to state 17
    class_decl   go to state 18
    id_stmt      go to state 19
    repeat_stmt  go to state 20
    if_stmt      go to state 21
    use_stmt     go to state 22
    check_stmt   go to state 23
    detect_stmt  go to state 24
    always_stmt  go to state 25


state 14

    0 $accept: stmt . $end

    $end  shift, and go to state 53


state 15

   48 declaration: type . ID EQ expr

    ID  shift, and go to state 54


state 16

    8 stmt: declaration .

    $default  reduce using rule 8 (stmt)


state 17

    9 stmt: action_decl .

    $default  reduce using rule 9 (stmt)


state 18

    3 stmt: class_decl .

    $default  reduce using rule 3 (stmt)


state 19

   10 stmt: id_stmt .

    $default  reduce using rule 10 (stmt)


state 20

    1 stmt: repeat_stmt .

    $default  reduce using rule 1 (stmt)


state 21

    2 stmt: if_stmt .

    $default  reduce using rule 2 (stmt)


state 22

    4 stmt: use_stmt .

    $default  reduce using rule 4 (stmt)


state 23

    5 stmt: check_stmt .

    $default  reduce using rule 5 (stmt)


state 24

    6 stmt: detect_stmt .

    $default  reduce using rule 6 (stmt)


state 25

    7 stmt: always_stmt .

    $default  reduce using rule 7 (stmt)


state 26

   60 assign: EQ . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 55


state 27

   54 instance: COLON . ID instance

    ID  shift, and go to state 56


state 28

   62 id_stmtp: instance . action_call

    LPAREN  shift, and go to state 57

    action_call  go to state 58


state 29

   63 id_stmtp: assign .

    $default  reduce using rule 63 (id_stmtp)


state 30

   61 id_stmt: ID id_stmtp .

    $default  reduce using rule 61 (id_stmt)


state 31

   49 action_decl: ACTION ID . action_args action_ret stmts END

    LPAREN  shift, and go to state 59

    $default  reduce using rule 51 (action_args)

    action_args  go to state 60


state 32

   57 class_decl: CLASS ID . inheritance declaration action_decl END

    IS  shift, and go to state 61

    $default  reduce using rule 59 (inheritance)

    inheritance  go to state 62


state 33

   67 repeat_stmtp: INTEGER . TIMES

    TIMES  shift, and go to state 63


state 34

   65 repeat_stmtp: WHILE . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 64


state 35

   66 repeat_stmtp: UNTIL . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 65


state 36

   64 repeat_stmt: REPEAT repeat_stmtp . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13

    $default  reduce using rule 12 (stmts)

    stmt         go to state 49
    stmts        go to state 66
    type         go to state 15
    declaration  go to state 16
    action_decl  go to state 17
    class_decl   go to state 18
    id_stmt      go to state 19
    repeat_stmt  go to state 20
    if_stmt      go to state 21
    use_stmt     go to state 22
    check_stmt   go to state 23
    detect_stmt  go to state 24
    always_stmt  go to state 25


state 37

   17 cast_expr: CAST . LPAREN type COMMA ID RPAREN

    LPAREN  shift, and go to state 67


state 38

   37 expr: LPAREN . expr RPAREN

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 68


state 39

   36 expr: MINUS_OP . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 69


state 40

   31 expr: FALSE .

    $default  reduce using rule 31 (expr)


state 41

   32 expr: TRUE .

    $default  reduce using rule 32 (expr)


state 42

   33 expr: NUMBER .

    $default  reduce using rule 33 (expr)


state 43

   35 expr: TEXT .

    $default  reduce using rule 35 (expr)


state 44

   34 expr: INTEGER .

    $default  reduce using rule 34 (expr)


state 45

   30 expr: cast_expr .

    $default  reduce using rule 30 (expr)


state 46

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr
   68 if_stmt: IF expr . stmts elseif_stmt

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    OR            shift, and go to state 70
    AND           shift, and go to state 71
    NOTEQ         shift, and go to state 72
    EQ            shift, and go to state 73
    GR            shift, and go to state 74
    LE            shift, and go to state 75
    GREQ          shift, and go to state 76
    LEEQ          shift, and go to state 77
    PLUS_OP       shift, and go to state 78
    MINUS_OP      shift, and go to state 79
    TIMES_OP      shift, and go to state 80
    DIV_OP        shift, and go to state 81
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13

    $default  reduce using rule 12 (stmts)

    stmt         go to state 49
    stmts        go to state 82
    type         go to state 15
    declaration  go to state 16
    action_decl  go to state 17
    class_decl   go to state 18
    id_stmt      go to state 19
    repeat_stmt  go to state 20
    if_stmt      go to state 21
    use_stmt     go to state 22
    check_stmt   go to state 23
    detect_stmt  go to state 24
    always_stmt  go to state 25


state 47

   38 lib: ID . libp

    DOT  shift, and go to state 83

    $default  reduce using rule 40 (libp)

    libp  go to state 84


state 48

   73 use_stmt: USE lib .

    $default  reduce using rule 73 (use_stmt)


state 49

   11 stmts: stmt . stmts

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13

    $default  reduce using rule 12 (stmts)

    stmt         go to state 49
    stmts        go to state 85
    type         go to state 15
    declaration  go to state 16
    action_decl  go to state 17
    class_decl   go to state 18
    id_stmt      go to state 19
    repeat_stmt  go to state 20
    if_stmt      go to state 21
    use_stmt     go to state 22
    check_stmt   go to state 23
    detect_stmt  go to state 24
    always_stmt  go to state 25


state 50

   74 check_stmt: CHECK stmts . END

    END  shift, and go to state 86


state 51

   75 detect_stmt: DETECT ID . IS ID stmts END

    IS  shift, and go to state 87


state 52

   76 always_stmt: ALWAYS stmts . END

    END  shift, and go to state 88


state 53

    0 $accept: stmt $end .

    $default  accept


state 54

   48 declaration: type ID . EQ expr

    EQ  shift, and go to state 89


state 55

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr
   60 assign: EQ expr .

    OR        shift, and go to state 70
    AND       shift, and go to state 71
    NOTEQ     shift, and go to state 72
    EQ        shift, and go to state 73
    GR        shift, and go to state 74
    LE        shift, and go to state 75
    GREQ      shift, and go to state 76
    LEEQ      shift, and go to state 77
    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 60 (assign)


state 56

   54 instance: COLON ID . instance

    COLON  shift, and go to state 27

    $default  reduce using rule 55 (instance)

    instance  go to state 90


state 57

   56 action_call: LPAREN . args RPAREN

    ID  shift, and go to state 91

    $default  reduce using rule 42 (args)

    args  go to state 92


state 58

   62 id_stmtp: instance action_call .

    $default  reduce using rule 62 (id_stmtp)


state 59

   50 action_args: LPAREN . args_def RPAREN

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4

    type      go to state 93
    args_def  go to state 94


state 60

   49 action_decl: ACTION ID action_args . action_ret stmts END

    RETURNS  shift, and go to state 95

    $default  reduce using rule 53 (action_ret)

    action_ret  go to state 96


state 61

   58 inheritance: IS . args

    ID  shift, and go to state 91

    $default  reduce using rule 42 (args)

    args  go to state 97


state 62

   57 class_decl: CLASS ID inheritance . declaration action_decl END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4

    type         go to state 15
    declaration  go to state 98


state 63

   67 repeat_stmtp: INTEGER TIMES .

    $default  reduce using rule 67 (repeat_stmtp)


state 64

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr
   65 repeat_stmtp: WHILE expr .

    OR        shift, and go to state 70
    AND       shift, and go to state 71
    NOTEQ     shift, and go to state 72
    EQ        shift, and go to state 73
    GR        shift, and go to state 74
    LE        shift, and go to state 75
    GREQ      shift, and go to state 76
    LEEQ      shift, and go to state 77
    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 65 (repeat_stmtp)


state 65

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr
   66 repeat_stmtp: UNTIL expr .

    OR        shift, and go to state 70
    AND       shift, and go to state 71
    NOTEQ     shift, and go to state 72
    EQ        shift, and go to state 73
    GR        shift, and go to state 74
    LE        shift, and go to state 75
    GREQ      shift, and go to state 76
    LEEQ      shift, and go to state 77
    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 66 (repeat_stmtp)


state 66

   64 repeat_stmt: REPEAT repeat_stmtp stmts . END

    END  shift, and go to state 99


state 67

   17 cast_expr: CAST LPAREN . type COMMA ID RPAREN

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4

    type  go to state 100


state 68

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr
   37     | LPAREN expr . RPAREN

    RPAREN    shift, and go to state 101
    OR        shift, and go to state 70
    AND       shift, and go to state 71
    NOTEQ     shift, and go to state 72
    EQ        shift, and go to state 73
    GR        shift, and go to state 74
    LE        shift, and go to state 75
    GREQ      shift, and go to state 76
    LEEQ      shift, and go to state 77
    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81


state 69

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr
   36     | MINUS_OP expr .

    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 36 (expr)


state 70

   22 expr: expr OR . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 102


state 71

   23 expr: expr AND . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 103


state 72

   25 expr: expr NOTEQ . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 104


state 73

   24 expr: expr EQ . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 105


state 74

   26 expr: expr GR . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 106


state 75

   27 expr: expr LE . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 107


state 76

   28 expr: expr GREQ . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 108


state 77

   29 expr: expr LEEQ . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 109


state 78

   18 expr: expr PLUS_OP . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 110


state 79

   19 expr: expr MINUS_OP . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 111


state 80

   20 expr: expr TIMES_OP . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 112


state 81

   21 expr: expr DIV_OP . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 113


state 82

   68 if_stmt: IF expr stmts . elseif_stmt

    END     shift, and go to state 114
    ELSEIF  shift, and go to state 115
    ELSE    shift, and go to state 116

    elseif_stmt  go to state 117
    else_stmt    go to state 118


state 83

   39 libp: DOT . ID libp

    ID  shift, and go to state 119


state 84

   38 lib: ID libp .

    $default  reduce using rule 38 (lib)


state 85

   11 stmts: stmt stmts .

    $default  reduce using rule 11 (stmts)


state 86

   74 check_stmt: CHECK stmts END .

    $default  reduce using rule 74 (check_stmt)


state 87

   75 detect_stmt: DETECT ID IS . ID stmts END

    ID  shift, and go to state 120


state 88

   76 always_stmt: ALWAYS stmts END .

    $default  reduce using rule 76 (always_stmt)


state 89

   48 declaration: type ID EQ . expr

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 121


state 90

   54 instance: COLON ID instance .

    $default  reduce using rule 54 (instance)


state 91

   41 args: ID . argsp

    COMMA  shift, and go to state 122

    $default  reduce using rule 44 (argsp)

    argsp  go to state 123


state 92

   56 action_call: LPAREN args . RPAREN

    RPAREN  shift, and go to state 124


state 93

   45 args_def: type . ID args_defp

    ID  shift, and go to state 125


state 94

   50 action_args: LPAREN args_def . RPAREN

    RPAREN  shift, and go to state 126


state 95

   52 action_ret: RETURNS . type

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4

    type  go to state 127


state 96

   49 action_decl: ACTION ID action_args action_ret . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13

    $default  reduce using rule 12 (stmts)

    stmt         go to state 49
    stmts        go to state 128
    type         go to state 15
    declaration  go to state 16
    action_decl  go to state 17
    class_decl   go to state 18
    id_stmt      go to state 19
    repeat_stmt  go to state 20
    if_stmt      go to state 21
    use_stmt     go to state 22
    check_stmt   go to state 23
    detect_stmt  go to state 24
    always_stmt  go to state 25


state 97

   58 inheritance: IS args .

    $default  reduce using rule 58 (inheritance)


state 98

   57 class_decl: CLASS ID inheritance declaration . action_decl END

    ACTION  shift, and go to state 6

    action_decl  go to state 129


state 99

   64 repeat_stmt: REPEAT repeat_stmtp stmts END .

    $default  reduce using rule 64 (repeat_stmt)


state 100

   17 cast_expr: CAST LPAREN type . COMMA ID RPAREN

    COMMA  shift, and go to state 130


state 101

   37 expr: LPAREN expr RPAREN .

    $default  reduce using rule 37 (expr)


state 102

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   22     | expr OR expr .
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr

    AND       shift, and go to state 71
    NOTEQ     shift, and go to state 72
    EQ        shift, and go to state 73
    GR        shift, and go to state 74
    LE        shift, and go to state 75
    GREQ      shift, and go to state 76
    LEEQ      shift, and go to state 77
    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 22 (expr)


state 103

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   23     | expr AND expr .
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr

    NOTEQ     shift, and go to state 72
    EQ        shift, and go to state 73
    GR        shift, and go to state 74
    LE        shift, and go to state 75
    GREQ      shift, and go to state 76
    LEEQ      shift, and go to state 77
    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 23 (expr)


state 104

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   25     | expr NOTEQ expr .
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr

    GR        shift, and go to state 74
    LE        shift, and go to state 75
    GREQ      shift, and go to state 76
    LEEQ      shift, and go to state 77
    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 25 (expr)


state 105

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   24     | expr EQ expr .
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr

    GR        shift, and go to state 74
    LE        shift, and go to state 75
    GREQ      shift, and go to state 76
    LEEQ      shift, and go to state 77
    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 24 (expr)


state 106

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   26     | expr GR expr .
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr

    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 26 (expr)


state 107

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   27     | expr LE expr .
   28     | expr . GREQ expr
   29     | expr . LEEQ expr

    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 27 (expr)


state 108

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   28     | expr GREQ expr .
   29     | expr . LEEQ expr

    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 28 (expr)


state 109

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr
   29     | expr LEEQ expr .

    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 29 (expr)


state 110

   18 expr: expr . PLUS_OP expr
   18     | expr PLUS_OP expr .
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr

    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 18 (expr)


state 111

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   19     | expr MINUS_OP expr .
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr

    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 19 (expr)


state 112

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   20     | expr TIMES_OP expr .
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr

    $default  reduce using rule 20 (expr)


state 113

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   21     | expr DIV_OP expr .
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr

    $default  reduce using rule 21 (expr)


state 114

   72 else_stmt: END .

    $default  reduce using rule 72 (else_stmt)


state 115

   69 elseif_stmt: ELSEIF . expr stmts elseif_stmt

    CAST      shift, and go to state 37
    LPAREN    shift, and go to state 38
    MINUS_OP  shift, and go to state 39
    FALSE     shift, and go to state 40
    TRUE      shift, and go to state 41
    NUMBER    shift, and go to state 42
    TEXT      shift, and go to state 43
    INTEGER   shift, and go to state 44

    cast_expr  go to state 45
    expr       go to state 131


state 116

   71 else_stmt: ELSE . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13

    $default  reduce using rule 12 (stmts)

    stmt         go to state 49
    stmts        go to state 132
    type         go to state 15
    declaration  go to state 16
    action_decl  go to state 17
    class_decl   go to state 18
    id_stmt      go to state 19
    repeat_stmt  go to state 20
    if_stmt      go to state 21
    use_stmt     go to state 22
    check_stmt   go to state 23
    detect_stmt  go to state 24
    always_stmt  go to state 25


state 117

   68 if_stmt: IF expr stmts elseif_stmt .

    $default  reduce using rule 68 (if_stmt)


state 118

   70 elseif_stmt: else_stmt .

    $default  reduce using rule 70 (elseif_stmt)


state 119

   39 libp: DOT ID . libp

    DOT  shift, and go to state 83

    $default  reduce using rule 40 (libp)

    libp  go to state 133


state 120

   75 detect_stmt: DETECT ID IS ID . stmts END

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13

    $default  reduce using rule 12 (stmts)

    stmt         go to state 49
    stmts        go to state 134
    type         go to state 15
    declaration  go to state 16
    action_decl  go to state 17
    class_decl   go to state 18
    id_stmt      go to state 19
    repeat_stmt  go to state 20
    if_stmt      go to state 21
    use_stmt     go to state 22
    check_stmt   go to state 23
    detect_stmt  go to state 24
    always_stmt  go to state 25


state 121

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr
   48 declaration: type ID EQ expr .

    OR        shift, and go to state 70
    AND       shift, and go to state 71
    NOTEQ     shift, and go to state 72
    EQ        shift, and go to state 73
    GR        shift, and go to state 74
    LE        shift, and go to state 75
    GREQ      shift, and go to state 76
    LEEQ      shift, and go to state 77
    PLUS_OP   shift, and go to state 78
    MINUS_OP  shift, and go to state 79
    TIMES_OP  shift, and go to state 80
    DIV_OP    shift, and go to state 81

    $default  reduce using rule 48 (declaration)


state 122

   43 argsp: COMMA . ID argsp

    ID  shift, and go to state 135


state 123

   41 args: ID argsp .

    $default  reduce using rule 41 (args)


state 124

   56 action_call: LPAREN args RPAREN .

    $default  reduce using rule 56 (action_call)


state 125

   45 args_def: type ID . args_defp

    COMMA  shift, and go to state 136

    $default  reduce using rule 47 (args_defp)

    args_defp  go to state 137


state 126

   50 action_args: LPAREN args_def RPAREN .

    $default  reduce using rule 50 (action_args)


state 127

   52 action_ret: RETURNS type .

    $default  reduce using rule 52 (action_ret)


state 128

   49 action_decl: ACTION ID action_args action_ret stmts . END

    END  shift, and go to state 138


state 129

   57 class_decl: CLASS ID inheritance declaration action_decl . END

    END  shift, and go to state 139


state 130

   17 cast_expr: CAST LPAREN type COMMA . ID RPAREN

    ID  shift, and go to state 140


state 131

   18 expr: expr . PLUS_OP expr
   19     | expr . MINUS_OP expr
   20     | expr . TIMES_OP expr
   21     | expr . DIV_OP expr
   22     | expr . OR expr
   23     | expr . AND expr
   24     | expr . EQ expr
   25     | expr . NOTEQ expr
   26     | expr . GR expr
   27     | expr . LE expr
   28     | expr . GREQ expr
   29     | expr . LEEQ expr
   69 elseif_stmt: ELSEIF expr . stmts elseif_stmt

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4
    ID            shift, and go to state 5
    OR            shift, and go to state 70
    AND           shift, and go to state 71
    NOTEQ         shift, and go to state 72
    EQ            shift, and go to state 73
    GR            shift, and go to state 74
    LE            shift, and go to state 75
    GREQ          shift, and go to state 76
    LEEQ          shift, and go to state 77
    PLUS_OP       shift, and go to state 78
    MINUS_OP      shift, and go to state 79
    TIMES_OP      shift, and go to state 80
    DIV_OP        shift, and go to state 81
    ACTION        shift, and go to state 6
    CLASS         shift, and go to state 7
    REPEAT        shift, and go to state 8
    IF            shift, and go to state 9
    USE           shift, and go to state 10
    CHECK         shift, and go to state 11
    DETECT        shift, and go to state 12
    ALWAYS        shift, and go to state 13

    $default  reduce using rule 12 (stmts)

    stmt         go to state 49
    stmts        go to state 141
    type         go to state 15
    declaration  go to state 16
    action_decl  go to state 17
    class_decl   go to state 18
    id_stmt      go to state 19
    repeat_stmt  go to state 20
    if_stmt      go to state 21
    use_stmt     go to state 22
    check_stmt   go to state 23
    detect_stmt  go to state 24
    always_stmt  go to state 25


state 132

   71 else_stmt: ELSE stmts . END

    END  shift, and go to state 142


state 133

   39 libp: DOT ID libp .

    $default  reduce using rule 39 (libp)


state 134

   75 detect_stmt: DETECT ID IS ID stmts . END

    END  shift, and go to state 143


state 135

   43 argsp: COMMA ID . argsp

    COMMA  shift, and go to state 122

    $default  reduce using rule 44 (argsp)

    argsp  go to state 144


state 136

   46 args_defp: COMMA . type ID args_defp

    INTEGER_TYPE  shift, and go to state 1
    NUMBER_TYPE   shift, and go to state 2
    BOOLEAN_TYPE  shift, and go to state 3
    TEXT_TYPE     shift, and go to state 4

    type  go to state 145


state 137

   45 args_def: type ID args_defp .

    $default  reduce using rule 45 (args_def)


state 138

   49 action_decl: ACTION ID action_args action_ret stmts END .

    $default  reduce using rule 49 (action_decl)


state 139

   57 class_decl: CLASS ID inheritance declaration action_decl END .

    $default  reduce using rule 57 (class_decl)


state 140

   17 cast_expr: CAST LPAREN type COMMA ID . RPAREN

    RPAREN  shift, and go to state 146


state 141

   69 elseif_stmt: ELSEIF expr stmts . elseif_stmt

    END     shift, and go to state 114
    ELSEIF  shift, and go to state 115
    ELSE    shift, and go to state 116

    elseif_stmt  go to state 147
    else_stmt    go to state 118


state 142

   71 else_stmt: ELSE stmts END .

    $default  reduce using rule 71 (else_stmt)


state 143

   75 detect_stmt: DETECT ID IS ID stmts END .

    $default  reduce using rule 75 (detect_stmt)


state 144

   43 argsp: COMMA ID argsp .

    $default  reduce using rule 43 (argsp)


state 145

   46 args_defp: COMMA type . ID args_defp

    ID  shift, and go to state 148


state 146

   17 cast_expr: CAST LPAREN type COMMA ID RPAREN .

    $default  reduce using rule 17 (cast_expr)


state 147

   69 elseif_stmt: ELSEIF expr stmts elseif_stmt .

    $default  reduce using rule 69 (elseif_stmt)


state 148

   46 args_defp: COMMA type ID . args_defp

    COMMA  shift, and go to state 136

    $default  reduce using rule 47 (args_defp)

    args_defp  go to state 149


state 149

   46 args_defp: COMMA type ID args_defp .

    $default  reduce using rule 46 (args_defp)
